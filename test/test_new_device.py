# coding: utf-8

"""
    OmniCore Model and State Management API

    This is an OmniCore Model and State Management server.  # noqa: E501

    The version of the OpenAPI document: 1.0
    Contact: support@korewireless.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import OmniCore
from OmniCore.models.new_device import NewDevice  # noqa: E501
from OmniCore.rest import ApiException

class TestNewDevice(unittest.TestCase):
    """NewDevice unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test NewDevice
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NewDevice`
        """
        model = OmniCore.models.new_device.NewDevice()  # noqa: E501
        if include_optional :
            return NewDevice(
                id = '012', 
                blocked = True, 
                credentials = [
                    OmniCore.models.device_credential.DeviceCredential(
                        expiration_time = '', 
                        public_key = OmniCore.models.public_key_credential.PublicKeyCredential(
                            format = 'RSA_PEM', 
                            key = '', ), )
                    ], 
                gateway_config = OmniCore.models.gateway_config.GatewayConfig(
                    gateway_auth_method = 'GATEWAY_AUTH_METHOD_UNSPECIFIED', 
                    gateway_type = 'NON_GATEWAY', ), 
                config = OmniCore.models.device_config.DeviceConfig(
                    acknowledged = True, 
                    binary_data = '', 
                    cloud_update_time = '', 
                    device_ack_time = '', 
                    version = 56, ), 
                log_level = 'INFO', 
                metadata = {
                    'key' : ''
                    }
            )
        else :
            return NewDevice(
                id = '012',
        )
        """

    def testNewDevice(self):
        """Test NewDevice"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
